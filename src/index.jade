doctype html
html
    head
        meta(charset='utf-8')
        meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
        title Ember: An Introduction

        link(rel='stylesheet', type='text/css', href='build/build.css')
        link(rel='shortcut icon' type='image/x-icon' href='favicon.ico')
    body

        article

            section
                h1 Ember
                h2 An Introduction
                
            section
                h1 Terms
                table
                    tr
                        th Ember
                        th Silverlight
                    tr
                        td Route
                        td ViewModel Constructor
                    tr
                        td Controller
                        td ViewModel
                    tr
                        td View
                        td Storyboard
                    tr
                        td Template
                        td XAML Page
                        
            section
                h1 Object Model
                h2.bullet Ember.Object
                ul
                    li Always 'extend()'
                    li init
                    li this._super() 
                    li (especially if overriding init of core class!)

            section
                h1 Computed Properties
                h2.bullet Functions as properties!
                ul
                    li What did you say?
                    li FUNCTIONS AS PROPERTIES!

            section
                pre.small
                    code.language-javascript.small.
                        App.Person = Ember.Object.extend({
                            // these will be supplied by `create`
                            firstName: null,
                            lastName: null,
                            fullName: function() {
                                return this.get('firstName') + ' ' + this.get('lastName');
                            }.property('firstName', 'lastName')
                        });

                        var ironMan = App.Person.create({
                            firstName: "Tony",
                            lastName:  "Stark"
                        });

                        ironMan.get('fullName'); // "Tony Stark"

            section
                h1 Routing
                h2.bullet First-Class Citizen
                ul
                    li Helps manage application state
                    li Each state represented by a URL
                    
            section
                h1 Active Route Handlers
                h2 At any time, one or more routes can be <em>active</em>
                h2.bullet What causes routes to change?
                ul
                    li User interaction with view -> URL change
                    li User manually changed URL
            
            section
                h1.bullet On Route Change
                ul
                    li Conditionally redirect to a new URL
                    li Update a controller
                    li Change the template
                    
            section
                h1 The Router
                h2 Where routing is configured
                pre.small
                    code.small.language-javascript.
                        App.Router.map(function() {
                            this.route("posts", function() {
                                this.route("activePost", { path: "/:id" }, function() {
                                    this.route("comments");
                                });
                            });
                        });
                    
            section
                h1 Outlets
                h2 Templates get rendered into parent route's 'outlet'
                pre
                    code.language-markup.
                        application
                            index
                            /posts
                                /posts/1
                                    /posts/1/comments
                    
            section
                h1 Templates
                h2 Markup / data-bindings
                h2.bullet Default 'application' template
                ul
                    li Header / Footer / Decorative Content
                    li At least one 'outlet'
                    
            section
                h1 Templates
                h2 Uses Handlebars (but moving to HTMLBars)
                h2 Logic-less
                pre
                    code.language-javascript.
                        &lt;script type="text/x-handlebars"&gt;
                            Hello, <strong>{{firstName}} {{lastName}}</strong>!
                        &lt;/script&gt;

        script(src='build/build.js')
